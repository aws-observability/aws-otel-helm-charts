nameOverride: ""
fullnameOverride: ""
global:
  namespaceOverride: ""
awsRegion: ""
clusterName: ""

# -- Additional labels to add into metadata
additionalLabels: {}
  # app: adot

serviceAccount:
  create: true
  annotations: {}
  name: ""

adotCollector:
  image:
    name: "aws-otel-collector"
    repository: "amazon/aws-otel-collector"
    tag: "v0.27.0"
    daemonSetPullPolicy: "IfNotPresent"
    sidecarPullPolicy: "Always"
  daemonSet:
    enabled: true
    daemonSetName: "adot-collector-daemonset"
    createNamespace: true
    namespace: "amazon-metrics"
    namespaceOverride: ""
    serviceAccount:
      create: true
      name: "adot-collector-sa"
      annotations: {}
    clusterRoleName: "adot-collector-role"
    clusterRoleBindingName: "adot-collector-role-binding"
    configMap:
      name: "adot-conf"
      app: "opentelemetry"
      component: "adot-conf"
    containersName: "adot-collector-container"
    env:
      - name: "K8S_NODE_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "spec.nodeName"
      - name: "HOST_IP"
        valueFrom:
          fieldRef:
            fieldPath: "status.hostIP"
      - name: "K8S_POD_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "metadata.name"
      - name: "HOST_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "spec.nodeName"
      - name: "K8S_NAMESPACE"
        valueFrom:
          fieldRef:
            fieldPath: "metadata.namespace"
    command:
      - "/awscollector"
      - "--config=/conf/adot-config.yaml"
    resources:
      limits:
        cpu: "200m"
        memory: "200Mi"
      requests:
        cpu: "200m"
        memory: "200Mi"
    volumes:
      - configMap:
          name: "adot-conf"
          items:
            - key: "adot-config"
              path: "adot-config.yaml"
        name: "adot-config-vol"
      - name: "rootfs"
        hostPath:
          path: "/"
      - name: "dockersock"
        hostPath:
          path: "/var/run/docker.sock"
      - name: "varlibdocker"
        hostPath:
          path: "/var/lib/docker"
      - name: "containerdsock"
        hostPath:
          path: "/run/containerd/containerd.sock"
      - name: "sys"
        hostPath:
          path: "/sys"
      - name: "devdisk"
        hostPath:
          path: "/dev/disk/"
    volumeMounts:
      - name: "rootfs"
        mountPath: "/rootfs"
        readOnly: true
      - name: "dockersock"
        mountPath: "/var/run/docker.sock"
        readOnly: true
      - name: "varlibdocker"
        mountPath: "/var/lib/docker"
        readOnly: true
      - name: "containerdsock"
        mountPath: "/run/containerd/containerd.sock"
        readOnly: true
      - name: "sys"
        mountPath: "/sys"
        readOnly: true
      - name: "devdisk"
        mountPath: "/dev/disk"
        readOnly: true
      - name: "adot-config-vol"
        mountPath: "/conf"
    adotConfig:
      extensions:
        health_check:
      receivers:
        awscontainerinsightreceiver:
          collection_interval: 60s
          container_orchestrator: eks
      processors:
        batch/metrics:
          timeout: 60s
        filter/namespaces:
          metrics:
            include:
              match_type: regexp
              resource_attributes:
              - Key: Namespace
                Value: "^default$" # Here we let only metrics from default namespace be exported
        filter/metrics_include:
          metrics:
            include:
              match_type: regexp
              metric_names:
              - pod_number_of_container_restarts
              - pod_cpu_utilization
              - pod_memory_utilization
              - pod_network_tx_bytes
              - pod_network_rx_bytes
              - cluster_failed_node_count
              - cluster_node_count
              - namespace_number_of_running_pods
              - service_number_of_running_pods
              - node_number_of_running_containers
              - node_number_of_running_pods
              - node_network_total_bytes
              - node_cpu_limit
              - node_cpu_reserved_capacity
              - node_cpu_utilization
              - node_cpu_usage_total
              - node_memory_limit
              - node_memory_utilization
              - node_memory_working_set
              - node_filesystem_utilization
              - pod_cpu_reserved_capacity
              - pod_memory_reserved_capacity
              - node_network_tx_bytes
              - node_network_rx_bytes
        # Override this block to tell the config your real cluster name
        resource/set_attributes:
          attributes:
            - key: ClusterName
              value: ""
              action: insert
      exporters: {}
        awsemf:
          namespace: "ContainerInsights"
          log_group_name: "" # Set here CloudWatch log group name where adot logs will be sent
          log_stream_name: "adot-metrics"
          region: "" # Set here AWS region name where the cluster exists
          dimension_rollup_option: "NoDimensionRollup"
          resource_to_telemetry_conversion:
            enabled: true
          parse_json_encoded_attr_values: [Sources, kubernetes]
          metric_declarations:
          # node metrics
          - dimensions: [[PodName, Namespace, ClusterName]]
            metric_name_selectors:
              - pod_number_of_container_restarts
              - pod_cpu_utilization
              - pod_memory_utilization
              - pod_network_tx_bytes
              - pod_network_rx_bytes
          - dimensions: [[ClusterName]]
            metric_name_selectors:
              - node_cpu_utilization
              - node_memory_utilization
              - node_network_total_bytes
              - node_cpu_reserved_capacity
              - node_number_of_running_pods
              - node_number_of_running_containers
              - node_cpu_usage_total
              - node_cpu_limit
              - node_memory_working_set
              - node_memory_limit
              - node_network_tx_bytes
              - node_network_rx_bytes
              - node_disk_utilization
              - kube_deployment_spec_replicas
              - kube_deployment_status_replicas_available
          # pod metrics
          - dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - pod_cpu_utilization
              - pod_memory_utilization
              - pod_network_rx_bytes
              - pod_network_tx_bytes
              - pod_cpu_utilization_over_pod_limit
              - pod_memory_utilization_over_pod_limit
          - dimensions: [[PodName, Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - pod_cpu_reserved_capacity
              - pod_memory_reserved_capacity
          - dimensions: [[PodName, Namespace, ClusterName]]
            metric_name_selectors:
              - pod_number_of_container_restarts
              - container_cpu_limit
              - container_cpu_request
              - container_cpu_utilization
              - container_memory_limit
              - container_memory_request
              - container_memory_utilization
              - container_memory_working_set

          # cluster metrics
          - dimensions: [[ClusterName]]
            metric_name_selectors:
              - cluster_node_count
              - cluster_failed_node_count

          # service metrics
          - dimensions: [[Service, Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - service_number_of_running_pods

          # node fs metrics
          - dimensions: [[NodeName, InstanceId, ClusterName], [ClusterName]]
            metric_name_selectors:
              - node_filesystem_utilization

          # namespace metrics
          - dimensions: [[Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - namespace_number_of_running_pods

        # logging:
        #   loglevel: debug

      service:
        pipelines:
          # These pipelines can be used with above configuration or can be changed.
          # If no pipeline is defined, above configs are not working, they need to be declared as pipelines to be able to work.
          # metrics/awsemf_namespace_specific:
          #   receivers: ["awscontainerinsightreceiver"]
          #   processors: ["filter/metrics_include", "filter/namespaces", "resource/set_attributes", "batch/metrics"]
          #   exporters: ["awsemf"]
          # metrics/awsemf:
          #   receivers: ["awscontainerinsightreceiver", "prometheus"]
          #   processors: ["filter/metrics_include", "resource/set_attributes", "batch/metrics"]
          #   exporters: ["awsemf"]
        extensions: [health_check]
  sidecar:
    enabled: false
    name: "adot-sidecar"
    namespace: "adot-sidecar-namespace"
    namespaceOverride: ""
    regionS3: ""
    replicas: 1
    image:
      name: ""
      repository: ""
      tag: ""
      pullPolicy: ""
    resources:
      limits:
        cpu: "256m"
        memory: "512Mi"
      requests:
        cpu: "32m"
        memory: "24Mi"
