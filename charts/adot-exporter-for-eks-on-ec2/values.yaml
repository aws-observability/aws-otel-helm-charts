nameOverride: ""
fullnameOverride: ""
global:
  namespaceOverride: ""
awsRegion: ""
clusterName: ""

# -- Additional labels to add into metadata
additionalLabels: {}
  # app: adot

serviceAccount:
  create: true
  annotations: {}
  name: ""

adotCollector:
  image:
    name: "aws-otel-collector"
    repository: "amazon/aws-otel-collector"
    tag: "v0.27.0"
    daemonSetPullPolicy: "IfNotPresent"
    sidecarPullPolicy: "Always"
  daemonSet:
    enabled: true
    daemonSetName: "adot-collector-daemonset"
    createNamespace: true
    namespace: "amazon-metrics"
    namespaceOverride: ""
    serviceAccount:
      create: true
      name: "adot-collector-sa"
      annotations: {}
    clusterRoleName: "adot-collector-role"
    clusterRoleBindingName: "adot-collector-role-binding"
    configMap:
      name: "adot-conf"
      app: "opentelemetry"
      component: "adot-conf"
    containersName: "adot-collector-container"
    env:
      - name: "K8S_NODE_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "spec.nodeName"
      - name: "HOST_IP"
        valueFrom:
          fieldRef:
            fieldPath: "status.hostIP"
      - name: "K8S_POD_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "metadata.name"
      - name: "HOST_NAME"
        valueFrom:
          fieldRef:
            fieldPath: "spec.nodeName"
      - name: "K8S_NAMESPACE"
        valueFrom:
          fieldRef:
            fieldPath: "metadata.namespace"
    command:
      - "/awscollector"
      - "--config=/conf/adot-config.yaml"
    resources:
      limits:
        cpu: "200m"
        memory: "200Mi"
      requests:
        cpu: "200m"
        memory: "200Mi"
    volumes:
      - configMap:
          name: "adot-conf"
          items:
            - key: "adot-config"
              path: "adot-config.yaml"
        name: "adot-config-vol"
      - name: "rootfs"
        hostPath:
          path: "/"
      - name: "dockersock"
        hostPath:
          path: "/var/run/docker.sock"
      - name: "varlibdocker"
        hostPath:
          path: "/var/lib/docker"
      - name: "containerdsock"
        hostPath:
          path: "/run/containerd/containerd.sock"
      - name: "sys"
        hostPath:
          path: "/sys"
      - name: "devdisk"
        hostPath:
          path: "/dev/disk/"
    volumeMounts:
      - name: "rootfs"
        mountPath: "/rootfs"
        readOnly: true
      - name: "dockersock"
        mountPath: "/var/run/docker.sock"
        readOnly: true
      - name: "varlibdocker"
        mountPath: "/var/lib/docker"
        readOnly: true
      - name: "containerdsock"
        mountPath: "/run/containerd/containerd.sock"
        readOnly: true
      - name: "sys"
        mountPath: "/sys"
        readOnly: true
      - name: "devdisk"
        mountPath: "/dev/disk"
        readOnly: true
      - name: "adot-config-vol"
        mountPath: "/conf"
    adotConfig: {}
    adotConfigDefault:
      extensions:
        health_check:
      receivers:
        awscontainerinsightreceiver:
      processors:
        batch/metrics:
          timeout: 60s
        filter/namespaces:
          metrics:
            include:
              match_type: regexp
              resource_attributes:
                  - Key: Namespace
                  Value: ^default*
      exporters:
        awsemf:
          namespace: ContainerInsights
          log_group_name: '/aws/containerinsights/{ClusterName}/performance'
          log_stream_name: '{NodeName}'
          resource_to_telemetry_conversion:
            enabled: true
          dimension_rollup_option: NoDimensionRollup
          parse_json_encoded_attr_values: [Sources, kubernetes]
          metric_declarations:
            # node metrics
            - dimensions: [[NodeName, InstanceId, ClusterName]]
              metric_name_selectors:
                - node_cpu_utilization
                - node_memory_utilization
                - node_network_total_bytes
                - node_cpu_reserved_capacity
                - node_memory_reserved_capacity
                - node_number_of_running_pods
                - node_number_of_running_containers
            - dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]
              metric_name_selectors:
                  - pod_cpu_utilization
        logging:
          loglevel: debug
      service:
        pipelines:
          metrics:
            receivers: [awscontainerinsightreceiver]
            processors: [batch/metrics, filter/namespaces]
            exporters: [awsemf]
        extensions: [health_check]
  sidecar:
    enabled: false
    name: "adot-sidecar"
    namespace: "adot-sidecar-namespace"
    namespaceOverride: ""
    regionS3: ""
    replicas: 1
    image:
      name: ""
      repository: ""
      tag: ""
      pullPolicy: ""
    resources:
      limits:
        cpu: "256m"
        memory: "512Mi"
      requests:
        cpu: "32m"
        memory: "24Mi"
